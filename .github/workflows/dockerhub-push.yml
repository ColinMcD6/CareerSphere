name: Build and Push Docker Images

on:
  push:
  pull_request:
    branches:
      - development
      - main
    types:
      - closed

jobs:
  build-and-push:
    name: Build and Push Docker Images
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Determine Version Tag
        id: version
        run: |
          # Read the current version
          NEW_VERSION=$(cat version.txt)


          # Determine the tag based on the branch
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            IMAGE_TAG="${NEW_VERSION}-dev"
            LATEST_TAG="latest-dev"
            TARGET="development"
            VITE_API_URL="https://localhost:4004"
          elif [[ "${{ github.ref }}" == "refs/heads/caddy" ]]; then
            IMAGE_TAG="${NEW_VERSION}-dev"
            LATEST_TAG="latest-dev"
            TARGET="development"
            VITE_API_URL="https://localhost:4004"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            IMAGE_TAG="${NEW_VERSION}"
            LATEST_TAG="latest"
            TARGET="production"
            VITE_API_URL="https://api.career-sphere.me"
          fi

          # Output the tag
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "TARGET=$TARGET" >> $GITHUB_ENV
          echo "VITE_API_URL=$VITE_API_URL" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Frontend Image
        run: |
          docker build \
            --target ${{ env.TARGET }} \
            --build-arg VITE_API_URL=${{ env.VITE_API_URL }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ env.LATEST_TAG }} ./frontend

          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ env.LATEST_TAG }}

      - name: Build and Push Backend Production Image
        run: |
          docker build \
            --target ${{ env.TARGET }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:${{ env.IMAGE_TAG }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:${{ env.LATEST_TAG }} ./backend

          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:${{ env.LATEST_TAG }}

      - name: Deploy to DigitalOcean
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST }}
          username: ${{ secrets.DIGITAL_OCEAN_USER }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
            docker compose -f ~/var/www/CareerSphere/compose.prod.yml down
            docker compose -f ~/var/www/CareerSphere/compose.prod.yml up -d
